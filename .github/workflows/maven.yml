name: Java CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: mvn -B package --file pom.xml -DskipTests

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build with Maven
        run: mvn -B test --file pom.xml

  publication:
    needs: [test]
    runs-on: ubuntu-latest

    env:
      LOGIN: ${{ secrets.DOCKER_LOGIN }}
      NAME: ${{ secrets.DOCKER_NAME }}

    steps:
    - name: Login to docker.io
      run:  echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_LOGIN }} --password-stdin
    - uses: actions/checkout@master
    - name: Build image
      run: docker build -t $LOGIN/$NAME:latest --build-arg PROFILE=heroku -f Dockerfile .
    - name: Push image to docker.io
      run: docker push $LOGIN/$NAME:latest

  release:
    needs: [publication]
    runs-on: ubuntu-latest

    env:
      LOGIN: ${{ secrets.DOCKER_LOGIN }}
      NAME: ${{ secrets.DOCKER_NAME }}
      APP: ${{ secrets.HEROKU_APP }}

    steps:
    - name: Pull Image from docker.io
      run: docker pull registry.hub.docker.com/$LOGIN/$NAME:latest
    - name: Login to heroku
      run: echo ${{ secrets.HEROKU_API_KEY }} | docker login --username=_ registry.heroku.com --password-stdin
    - name: Tag Image
      run: docker tag registry.hub.docker.com/$LOGIN/$NAME:latest registry.heroku.com/$APP/web
    - name: Push Image
      run: docker push registry.heroku.com/$APP/web
    - name: Set Image Id to env
      run: echo "IMAGE_ID=$(docker inspect registry.hub.docker.com/shabrack/helloworld:latest --format={{.Id}})" >> $GITHUB_ENV
    - name: Release Image
      run: "curl -X PATCH --show-error --fail https://api.heroku.com/apps/$APP/formation -d '{ \"updates\": [ { \"type\": \"web\", \"docker_image\": \"${{ env.IMAGE_ID}}\" }]}' -H 'Content-Type: application/json' -H 'Accept: application/vnd.heroku+json; version=3.docker-releases' -H 'Authorization: Bearer ${{ secrets.HEROKU_API_KEY }}'"
